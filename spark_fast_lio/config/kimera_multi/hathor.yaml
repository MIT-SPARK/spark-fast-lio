lio_mapping:
  common:
    lid_topic: "/hathor/lidar_points"
    imu_topic: "/hathor/forward/imu"
    time_sync_en: false         # ONLY turn on when external time synchronization is really not possible
    map_frame: "hathor/odom"
    lidar_frame: "hathor/velodyne_link"
    # NOTE: 'base_frame': It's the robot's base frame for integration with the Hydra system.
    base_frame: "hathor/base"                  # extrsincis should be given by tf message
    imu_frame: "camera_imu_optical_frame"

    visualization_frame: "base" # "lidar", "base", or "imu" (default: "imu", but for run Hydra, it should be "base")

  preprocess:
    lidar_type: 2               # 1 for Livox serials LiDAR, 2 for Velodyne LiDAR, 3 for ouster LiDAR,
    scan_line: 16
    scan_rate: 10               # only need to be set for velodyne, unit: Hz,
    timestamp_unit: 2           # the unit of time/t field in the PointCloud2 rostopic: 0-second, 1-milisecond, 2-microsecond, 3-nanosecond.
    blind: 0.3
    blind_for_human_pilot: 1.6  # This parameter is to reject cloud points from human pilots

  mapping:
    acc_cov: 0.1
    gyr_cov: 0.1
    b_acc_cov: 0.003
    b_gyr_cov: 0.001
    fov_degree: 180
    det_range: 100.0
    extrinsic_est_en: false      # true: enable the online estimation of IMU-LiDAR extrinsic,

    extrinsic_T: [ -0.01562052,  0.29156112, -0.19696571 ]
    extrinsic_R: [ 7.2672128925e-02, -9.9735514110e-01, 8.9830345202e-04,
                  -1.1970068015e-01, -9.6161327801e-03, -9.9276368451e-01,
                  9.9014717497e-01, 7.2038764212e-02, -1.2008298302e-01 ]

  filter_size_map: 0.3

  publish:
    path_en: true
    scan_publish_en: true        # false: close all the point cloud output
    dense_publish_en: true       # false: low down the points number in a global-frame point clouds scan.
    scan_lidarframe_pub_en: true # true: output the point cloud scans in the LiDAR frame
    scan_bodyframe_pub_en: true  # true: output the point cloud scans in IMU-body frame
    scan_baseframe_pub_en: true  # true: output the point cloud scans in the base frame

  pcd_save:
    pcd_save_en: false
    interval: -1                 # how many LiDAR frames saved in each pcd file;
    # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.

  feature_extract_enable: false
  runtime_pos_log_enable: false
  point_filter_num_for_preprocessing: 1 # If it is set to `1`, full point cloud gonna be publlished
  point_filter_num: 4                   # For pose estimation.
  max_iteration: 4
  cube_side_length: 1000
